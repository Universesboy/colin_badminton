{"version":3,"file":"static/js/221.e6740399.chunk.js","mappings":"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","sources":["components/pages/Achievements.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Achievements.css';\n\nfunction Achievements() {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const galleryImages = [\n    {\n      src: require('../assets/national_champion.jpg'),\n      caption: '🏆 CCAA National Champion',\n      description: '2023 Men\\'s Singles National Champion'\n    },\n    {\n      src: require('../assets/ocaa_awards.jpg'),\n      caption: '🏅 OCAA Awards',\n      description: 'Player of the Year & Regional All-Star Awards'\n    },\n    {\n      src: require('../assets/champion_flag.jpg'),\n      caption: '🎖️ Championship Banner',\n      description: 'CCAA National Championship Victory Celebration'\n    },\n    {\n      src: require('../assets/provincial_jump_smash.jpg'),\n      caption: '💫 Tournament Action',\n      description: 'Jump Smash at National Championships'\n    },\n    {\n      src: require('../assets/frontcourt.jpg'),\n      caption: '🏸 Match Play',\n      description: 'Competitive Match Performance'\n    },\n    {\n      src: require('../assets/ocaa.jpg'),\n      caption: '🌟 OCAA Ceremony',\n      description: 'Ontario Colleges Athletic Association Awards'\n    },\n    {\n      src: require('../assets/colin_poster.jpg'),\n      caption: '👨‍🏫 Professional Profile',\n      description: 'Senior Badminton Coach & National Champion',\n      featured: true\n    }\n  ];\n\n  const handleImageClick = (image) => {\n    setSelectedImage(image);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const handleCloseModal = () => {\n    setSelectedImage(null);\n    document.body.style.overflow = 'auto';\n  };\n\n  return (\n    <div className=\"achievements-container\">\n      <div className=\"achievements-hero\">\n        <h1>Achievements & Experience</h1>\n      </div>\n      \n      <div className=\"achievements-content\">\n        <div className=\"achievements-section\">\n          <h2>Competition Achievements</h2>\n          <div className=\"achievement-cards\">\n            <div className=\"achievement-card\">\n              <i className=\"fas fa-trophy\"></i>\n              <h3>CCAA Champion</h3>\n              <p>Men's Singles Champion in Canadian Collegiate Athletic Association</p>\n            </div>\n            <div className=\"achievement-card\">\n              <i className=\"fas fa-medal\"></i>\n              <h3>OCAA Champion</h3>\n              <p>Men's Singles Champion in Ontario Collegiate Athletic Association</p>\n            </div>\n            <div className=\"achievement-card\">\n              <i className=\"fas fa-star\"></i>\n              <h3>Provincial Team Member</h3>\n              <p>Former Sichuan Provincial Team Player</p>\n            </div>\n            <div className=\"achievement-card\">\n              <i className=\"fas fa-award\"></i>\n              <h3>Youth Champion</h3>\n              <p>Multiple-time Sichuan Province Youth Badminton Champion</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"achievements-section\">\n          <h2>Coaching Experience</h2>\n          <div className=\"experience-timeline\">\n            <div className=\"experience-item\">\n              <h3>Professional Coaching in Canada</h3>\n              <p>Over 5 years of coaching experience</p>\n              <p>Trained 10+ Canadian National level players (U13-U19)</p>\n            </div>\n            <div className=\"experience-item\">\n              <h3>High-Level Club Coach</h3>\n              <p>Senior coach at provincial badminton clubs</p>\n            </div>\n            <div className=\"experience-item\">\n              <h3>Olympic Training Experience</h3>\n              <p>Participated in training with multiple Canadian Olympic athletes</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"achievements-section\">\n          <h2>Teaching Philosophy</h2>\n          <div className=\"philosophy-cards\">\n            <div className=\"philosophy-card\">\n              <i className=\"fas fa-language\"></i>\n              <h3>Bilingual Instruction</h3>\n              <p>Professional coaching in both English and Chinese</p>\n            </div>\n            <div className=\"philosophy-card\">\n              <i className=\"fas fa-search\"></i>\n              <h3>Detailed Analysis</h3>\n              <p>Thorough analysis of student strengths and areas for improvement</p>\n            </div>\n            <div className=\"philosophy-card\">\n              <i className=\"fas fa-comments\"></i>\n              <h3>Continuous Support</h3>\n              <p>Post-lesson feedback and development planning</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"achievements-section gallery-section\">\n          <h2>Achievement Gallery</h2>\n          <div className=\"gallery-grid\">\n            {galleryImages.map((image, index) => (\n              <div \n                key={index} \n                className={`gallery-item ${image.featured ? 'featured-item' : ''}`}\n                onClick={() => handleImageClick(image)}\n              >\n                <div className=\"image-wrapper\">\n                  <img src={image.src} alt={image.caption} loading=\"lazy\" />\n                </div>\n                <div className=\"gallery-caption\">\n                  <h3>{image.caption}</h3>\n                  <p>{image.description}</p>\n                </div>\n                <div className=\"hover-overlay\">\n                  <span>Click to enlarge</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Modal with Zoom */}\n      {selectedImage && (\n        <div className=\"image-modal\" onClick={handleCloseModal}>\n          <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-image-container\">\n              <img src={selectedImage.src} alt={selectedImage.caption} />\n            </div>\n            <div className=\"modal-caption\">\n              <h3>{selectedImage.caption}</h3>\n              <p>{selectedImage.description}</p>\n            </div>\n            <button className=\"close-button\" onClick={handleCloseModal}>×</button>\n            <button className=\"prev-button\" onClick={(e) => {\n              e.stopPropagation();\n              const currentIndex = galleryImages.findIndex(img => img.src === selectedImage.src);\n              const prevIndex = (currentIndex - 1 + galleryImages.length) % galleryImages.length;\n              setSelectedImage(galleryImages[prevIndex]);\n            }}>❮</button>\n            <button className=\"next-button\" onClick={(e) => {\n              e.stopPropagation();\n              const currentIndex = galleryImages.findIndex(img => img.src === selectedImage.src);\n              const nextIndex = (currentIndex + 1) % galleryImages.length;\n              setSelectedImage(galleryImages[nextIndex]);\n            }}>❯</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Achievements;\n"],"names":["selectedImage","setSelectedImage","useState","galleryImages","src","require","caption","description","featured","handleCloseModal","document","body","style","overflow","_jsxs","className","children","_jsx","map","image","index","onClick","handleImageClick","alt","loading","e","stopPropagation","prevIndex","findIndex","img","length","nextIndex"],"sourceRoot":""}